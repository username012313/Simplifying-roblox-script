local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Player = game:GetService("Players").LocalPlayer

local Window = Rayfield:CreateWindow({
   Name = "Brookhaven TEST",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("LocalPlayer", 4483362458) -- Title, Image
local WalkSpeedSlider = Tab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 500},
   Increment = 1,
   Suffix = "",
   CurrentValue = 16,
   Flag = "WalkSpeedSlider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        while true do
            Player.Character.Humanoid.WalkSpeed = Value
            task.wait(0.1)
            end
   end,
})
local JumpPowerSlider = Tab:CreateSlider({
   Name = "Jump Power",
   Range = {0, 1000},
   Increment = 1,
   Suffix = "",
   CurrentValue = 16,
   Flag = "JumpPowerSlider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      Player.Character.Humanoid.JumpPower = Value*5
      
   end,
})
local Respawn = Tab:CreateButton({
   Name = "Respawn",
   Callback = function()
        Player.Character.Humanoid.Health = 0
   end,
})

local Brookhaven = Window:CreateTab("Brookhaven", 4483362458)
local CarSpeed = Brookhaven:CreateButton({
    Name = "Make Car Fast",
    Callback = function()
        local Player = game:GetService("Players").LocalPlayer
        local vehiclesFolder = workspace:WaitForChild("Vehicles")
        local carName = Player.Name .. "Car"
        local car = vehiclesFolder:WaitForChild(carName)
        local carUuid = car:GetAttribute("VehicleUuid")

        if carUuid ~= nil then
            local args = {
                carUuid,
                {
                    Lights = {lightsOn=false, hazardsActive=false},
                    IsLocked = false,
                    Appearance = {
                        IsSmoking=false,
                        WheelDecal="http://www.roblox.com/asset/?id=0",
                        BabyCarSeatInstalledNumber=0,
                        Color=Color3.new(0.3294117748737335, 0.5921568870544434, 1),
                        IsOnFire=false,
                        SuspensionHeight=2
                    },
                    Performance = {DriftStrength=1.5, MaxSpeed=math.huge, Turbo=3},
                    Owner = Player
                }
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ApplyStateToVehicle"):InvokeServer(unpack(args))

        else
            Rayfield:Notify({
                Title = "Error!",
                Content = "Does not work on this car or car not spawned in!",
                Duration = 6.5,
                Image = 0
            })
        end
    end,
})
local ResetCarSpeed = Brookhaven:CreateButton({
    Name = "Reset the Car",
    Callback = function()
        local Player = game:GetService("Players").LocalPlayer
        local vehiclesFolder = workspace:WaitForChild("Vehicles")
        local carName = Player.Name .. "Car"
        local car = vehiclesFolder:WaitForChild(carName)
        local carUuid = car:GetAttribute("VehicleUuid")

        if carUuid ~= nil then
            local args = {
                carUuid,
                {
                    Lights = {lightsOn=false, hazardsActive=false},
                    IsLocked = false,
                    Appearance = {
                        IsSmoking=false,
                        WheelDecal="http://www.roblox.com/asset/?id=0",
                        BabyCarSeatInstalledNumber=0,
                        Color=Color3.new(0.3294117748737335, 0.5921568870544434, 1),
                        IsOnFire=false,
                        SuspensionHeight=2
                    },
                    Performance = {DriftStrength=1.0, MaxSpeed=10, Turbo=0},
                    Owner = Player
                }
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ApplyStateToVehicle"):InvokeServer(unpack(args))

        else
            Rayfield:Notify({
                Title = "Error!",
                Content = "Does not work on this car or car not spawned in!",
                Duration = 6.5,
                Image = 0
            })
        end
    end,
})
local Slider = Brookhaven:CreateSlider({
   Name = "Speed Slider",
   Range = {0, 100000},
   Increment = 100,
   Suffix = "",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        local vehname = Player.Name .. "Car"
        local wheelpath = workspace.Vehicles:WaitForChild(vehname).Chassis.Wheels
        wheelpath.WheelBL.Cylindrical.MotorMaxTorque = Value/2
        wheelpath.WheelBR.Cylindrical.MotorMaxTorque = Value/2
        wheelpath.WheelFL.Cylindrical.MotorMaxTorque = Value/2
        wheelpath.WheelFR.Cylindrical.MotorMaxTorque = Value/2
        wheelpath.WheelBL.Cylindrical.MotorMaxAngularAcceleration = Value
        wheelpath.WheelBR.Cylindrical.MotorMaxAngularAcceleration = Value
        wheelpath.WheelFL.Cylindrical.MotorMaxAngularAcceleration = Value
        wheelpath.WheelFR.Cylindrical.MotorMaxAngularAcceleration = Value
        workspace.Vehicles:WaitForChild(vehname).Seats.VehicleSeat.MaxSpeed = Value
   end,
})
local Toggle = Brookhaven:CreateToggle({
   Name = "Set car to inf speed",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
        local vehname = Player.Name .. "Car"
        local vehicle = workspace.Vehicles:FindFirstChild(vehname)

        if Value then
            local UUID = vehicle:GetAttribute("VehicleUuid")
            if not UUID then
                warn("Vehicle UUID not found!")
                return
            end

            local args = {
                UUID,
                {
                    Lights = {
                        lightsOn = false,
                        hazardsActive = false
                    },
                    IsLocked = false,
                    Appearance = {
                        IsSmoking = false,
                        WheelDecal = "http://www.roblox.com/asset/?id=6409728408",
                        BabyCarSeatInstalledNumber = 0,
                        Color = Color3.new(0.3294117748737335, 0.5921568870544434, 1),
                        IsOnFire = false,
                        SuspensionHeight = 2
                    },
                    Performance = {
                        DriftStrength = 1.5,
                        MaxSpeed = 999,
                        Turbo = 3
                    },
                    Owner = Player
                }
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ApplyStateToVehicle"):InvokeServer(unpack(args))
        else
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AddMaxSpeed"):InvokeServer(-10)
        end
   end, 
})
local misc = Window:CreateTab("misc", 4483362458) -- Title, Image
local LoadIY = misc:CreateButton({
   Name = "Execute Infinite yield",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
   end,
})
local KickLocalPlayer = misc:CreateButton({
   Name = "Kick Yourself",
   Callback = function()
      Player:Kick("Kicked yourself")
   end,
})
